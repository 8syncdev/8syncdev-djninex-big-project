digraph G {
    node [shape=record, fontname=Helvetica, fontsize=10];

    // Optimized Class Definitions with Aggregation and Composition
    User [label="{User|username: string|password: string|email: string|phone: string|address: Address|roles: List[Role]|enrollments: List[UserEnrollment]|payments: List[Payment]|notifications: List[Notification]|subscriptions: List[Subscription]|+login(): boolean|+logout(): void}" style=filled, fillcolor="#E0F2F1"];
    Instructor [label="{Instructor|specialty: string|bio: string|courses: List[Course]|+create_course(): void|+assign_course(): void}" style=filled, fillcolor="#E3F2FD"];
    Address [label="{Address|street: string|city: string|state: string|zip: string|country: string}" style=filled, fillcolor="#F3E5F5"];
    Course [label="{Course|name: string|img_url: string|price: float|author: Instructor|categories: List[Category]|chapters: List[Chapter]|tags: List[Tag]|reviews: List[Review]|+add_chapter(): void|+remove_chapter(): void}" style=filled, fillcolor="#FFF8E1"];
    Tag [label="{Tag|name: string|courses: List[Course]}" style=filled, fillcolor="#FFEBEE"];
    Review [label="{Review|comment: string|rating: int|enrollment: UserEnrollment|+approve_review(): void|+reject_review(): void}" style=filled, fillcolor="#FCE4EC"];
    Lesson [label="{Lesson|name: string|content: string|exercises: List[Exercise]|+add_exercise(): void|+update_content(): void}" style=filled, fillcolor="#F0F4C3"];
    Chapter [label="{Chapter|name: string|content: string|lessons: List[Lesson]|+add_lesson(): void|+remove_lesson(): void}" style=filled, fillcolor="#E1F5FE"];
    UserEnrollment [label="{UserEnrollment|user: User|course: Course|audit: Audit|+enroll_user(): void}" style=filled, fillcolor="#F5F5F5"];
    Exercise [label="{Exercise|level: string|content: string|submissions: List[UserSubmission]|+add_submission(): void|+update_content(): void}" style=filled, fillcolor="#FFF3E0"];
    Submission [label="{Submission|code: string|grade: float|audit: Audit|user_submission: UserSubmission}" style=filled, fillcolor="#E8F5E9"];
    Role [label="{Role|name: string|users: List[User]}" style=filled, fillcolor="#FFECB3"];
    UserSubmission [label="{UserSubmission|user: User |submission: Submission|exercise: Exercise|+submit_assignment(): void}" style=filled, fillcolor="#EDE7F6"];
    Category [label="{Category|name: string|courses: List[Course]}" style=filled, fillcolor="#CFD8DC"];
    Audit [label="{Audit|created_at: datetime|updated_at: datetime|created_by: string|updated_by: string|user_enrollment: UserEnrollment}" style=filled, fillcolor="#EEEEEE"];
    Payment [label="{Payment|amount: float|date: datetime|status: string|user: User|courses: List[Course]|+process_payment(): void|+refund(): void}" style=filled, fillcolor="#FFFDE7"];
    Notification [label="{Notification|message: string|date_sent: datetime|user: User|+send(): void|+schedule(): void}" style=filled, fillcolor="#FFCDD2"];
    Subscription [label="{Subscription|start_date: datetime|end_date: datetime|user: User|courses: List[Course]|status: string|+renew_subscription(): void|+cancel_subscription(): void}" style=filled, fillcolor="#FFE0B2"];

    // Relations using Aggregation and Composition
    Instructor -> User [label="inherits" arrowhead=onormal color="#374151"]; 

    User -> UserEnrollment [label="1-N, has" arrowhead=odiamond color="#10B981"];  // Aggregation relationship
    User -> Payment [label="1-N, makes" arrowhead=odiamond color="#10B981"];  // Aggregation relationship
    User -> Notification [label="1-N, receives" arrowhead=odiamond color="#10B981"];  // Aggregation relationship
    User -> Subscription [label="1-N, subscribes" arrowhead=odiamond color="#10B981"];  // Aggregation relationship

    Course -> UserEnrollment [label="1-N, part of" arrowhead=diamond color="#F59E0B"];  // Composition relationship
    Course -> Review [label="1-N, contains" arrowhead=diamond color="#F59E0B"];  // Composition relationship
    Course -> Chapter [label="1-N, contains" arrowhead=diamond color="#F59E0B"];  // Composition relationship
    Course -> Category [label="N-N, associated with" arrowhead=odiamond color="#F59E0B"];  // Aggregation relationship
    Course -> Tag [label="N-N, associated with" arrowhead=odiamond color="#F59E0B"];  // Aggregation relationship
    Course -> Subscription [label="N-N, includes" arrowhead=odiamond color="#F59E0B"];  // Aggregation relationship
    
    Chapter -> Lesson [label="1-N, contains" arrowhead=diamond color="#F59E0B"];  // Composition relationship
    Lesson -> Exercise [label="1-N, contains" arrowhead=diamond color="#10B981"];  // Composition relationship
    Exercise -> UserSubmission [label="1-N, associated with" arrowhead=odiamond color="#10B981"];  // Aggregation relationship

    Address -> User [label="1-1, belongs to" arrowhead=diamond color="#3B82F6"];  // Composition relationship
    Submission -> UserSubmission [label="N-1, related to" arrowhead=odiamond color="#3B82F6"];  // Aggregation relationship

    Role -> User [label="N-N, associated with" arrowhead=odiamond color="#F59E0B"];  // Aggregation relationship

    // Simplified Legend
    subgraph cluster_legend {
        label = "Legend";
        key1 [label="Inheritance" shape=plaintext];
        key2 [label="Composition" shape=plaintext];
        key3 [label="Aggregation" shape=plaintext];

        key1_edge [label="inherits" shape=plaintext];
        key2_edge [label="composition" shape=plaintext];
        key3_edge [label="aggregation" shape=plaintext];

        // Adding edges to represent the legend
        key1 -> key1_edge [arrowhead=onormal color="#374151"]; // gray-700
        key2 -> key2_edge [arrowhead=diamond color="#F59E0B"]; // yellow-500
        key3 -> key3_edge [arrowhead=odiamond color="#10B981"]; // green-500
    }
}
